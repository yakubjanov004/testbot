"""
Client Help Handler - Simplified Implementation

This module handles client help functionality.
"""

from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from states.client_states import HelpStates
from filters.role_filter import RoleFilter

# Mock functions to replace utils and database imports
async def get_user_by_telegram_id(telegram_id: int):
    """Mock user data"""
    return {
        'id': 1,
        'telegram_id': telegram_id,
        'role': 'client',
        'language': 'uz',
        'full_name': 'Test Client',
        'phone_number': '+998901234567'
    }

async def get_user_lang(user_id: int) -> str:
    """Mock get user language"""
    return 'uz'

async def get_user_role(user_id: int) -> str:
    """Mock get user role"""
    return 'client'

def get_client_help_router():
    """Get client help router with role filtering"""
    from aiogram import Router
    router = Router()
    
    # Apply role filter
    role_filter = RoleFilter("client")
    router.message.filter(role_filter)
    router.callback_query.filter(role_filter)

    @router.message(F.text.in_(["Bot qo'llanmasi", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"]))
    async def help_handler(message: Message, state: FSMContext):
        """Handle bot guide request"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            lang = user.get('language', 'uz')

            guide_text = (
                "üìò <b>Botdan foydalanish qo'llanmasi</b>\n\n"
                "1) \"üîå Ulanish uchun ariza\" orqali yangi ulanish arizasini yuboring.\n"
                "2) \"üîß Texnik xizmat\" orqali muammo haqida ariza yuboring.\n"
                "3) \"üìû Operator bilan bog'lanish\" orqali telefon yoki onlayn chat orqali bog'laning.\n"
                "4) \"üë§ Kabinet\" bo'limida ma'lumotlaringizni ko'ring va o'zgartiring, arizalarni ko'ring.\n"
                "5) \"üåê Til o'zgartirish\" orqali tilni almashtiring."
                if lang == 'uz' else
                "üìò <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
                "1) –ß–µ—Ä–µ–∑ \"üîå –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\" –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.\n"
                "2) –ß–µ—Ä–µ–∑ \"üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å–ª—É–∂–±–∞\" –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –æ –ø—Ä–æ–±–ª–µ–º–µ.\n"
                "3) –í \"üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º\" –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –æ–Ω–ª–∞–π–Ω —á–∞—Ç.\n"
                "4) –í —Ä–∞–∑–¥–µ–ª–µ \"üë§ –ö–∞–±–∏–Ω–µ—Ç\" –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ, –∑–∞—è–≤–∫–∏.\n"
                "5) –ö–Ω–æ–ø–∫–æ–π \"üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\" –ø–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ —è–∑—ã–∫."
            )

            from keyboards.client_buttons import get_back_keyboard
            keyboard = get_back_keyboard(lang)

            await message.answer(guide_text, reply_markup=keyboard, parse_mode='HTML')
            await state.set_state(HelpStates.help_info)
        except Exception:
            await message.answer("‚ùå Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")

    @router.callback_query(F.data == "help_info")
    async def help_info_callback(callback: CallbackQuery, state: FSMContext):
        """Handle help info callback"""
        try:
            await callback.answer()
            
            user = await get_user_by_telegram_id(callback.from_user.id)
            lang = user.get('language', 'uz')
            
            help_text = (
                "‚ùì <b>Yordam va ko'rsatmalar</b>\n\n"
                "üîß <b>Texnik xizmatlar:</b>\n"
                "‚Ä¢ Internet tezligi sekin\n"
                "‚Ä¢ TV signal yo'q\n"
                "‚Ä¢ Router muammosi\n"
                "‚Ä¢ Kabellar uzilgan\n\n"
                "üîå <b>Ulanish xizmatlari:</b>\n"
                "‚Ä¢ Uy internet ulanishi\n"
                "‚Ä¢ Ofis internet ulanishi\n"
                "‚Ä¢ TV ulanishi\n\n"
                "üìû <b>Bog'lanish:</b>\n"
                "‚Ä¢ Telefon: +998 71 123 45 67\n"
                "‚Ä¢ Telegram: @alfaconnect_support\n\n"
                "‚è∞ <b>Ish vaqti:</b> Dushanba - Shanba, 9:00 - 18:00"
                if lang == 'uz' else
                "‚ùì <b>–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b>\n\n"
                "üîß <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏:</b>\n"
                "‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç\n"
                "‚Ä¢ –ù–µ—Ç –¢–í —Å–∏–≥–Ω–∞–ª–∞\n"
                "‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Ä–æ—É—Ç–µ—Ä–æ–º\n"
                "‚Ä¢ –û–±—Ä—ã–≤ –∫–∞–±–µ–ª–µ–π\n\n"
                "üîå <b>–£—Å–ª—É–≥–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>\n"
                "‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n"
                "‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—Ñ–∏—Å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n"
                "‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¢–í\n\n"
                "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n"
                "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +998 71 123 45 67\n"
                "‚Ä¢ Telegram: @alfaconnect_support\n\n"
                "‚è∞ <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –°—É–±–±–æ—Ç–∞, 9:00 - 18:00"
            )
            
            from keyboards.client_buttons import get_back_keyboard
            keyboard = get_back_keyboard(lang)
            
            await callback.message.edit_text(help_text, reply_markup=keyboard, parse_mode='HTML')
            
        except Exception as e:
            await callback.answer("‚ùå Xatolik yuz berdi", show_alert=True)

    return router
