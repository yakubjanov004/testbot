"""
Client Order Utils - Simplified Implementation

This module provides utility functions for client orders.
"""

from aiogram import F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from keyboards.client_buttons import get_order_utils_keyboard, get_main_menu_keyboard
from states.client_states import OrderUtilsStates
from utils.role_system import get_role_router

# Mock functions to replace utils and database imports
async def get_user_by_telegram_id(telegram_id: int):
    """Mock user data"""
    return {
        'id': 1,
        'telegram_id': telegram_id,
        'role': 'client',
        'language': 'uz',
        'full_name': 'Test Client',
        'phone_number': '+998901234567'
    }

async def get_user_lang(user_id: int) -> str:
    """Mock get user language"""
    return 'uz'

async def get_order_status(order_id: str):
    """Mock get order status"""
    return {
        'status': 'in_progress',
        'progress': 75,
        'estimated_completion': '2024-01-20',
        'technician': 'Ahmad Karimov',
        'notes': 'Texnik xizmat jarayonda'
    }

def get_order_utils_router():
    router = get_role_router("client")

    @router.message(F.text.in_(["üîß Buyurtma yordamchisi", "üîß –ü–æ–º–æ—â—å –∑–∞–∫–∞–∑–∞"]))
    async def order_utils_handler(message: Message, state: FSMContext):
        """Order utils handler"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            if not user:
                await message.answer("Foydalanuvchi topilmadi.")
                return
            
            lang = user.get('language', 'uz')
            
            utils_text = (
                "üîß <b>Buyurtma yordamchisi - To'liq ma'lumot</b>\n\n"
                "üìã <b>Mavjud funksiyalar:</b>\n"
                "‚Ä¢ Buyurtma holatini tekshirish\n"
                "‚Ä¢ Texnik xizmat ma'lumotlari\n"
                "‚Ä¢ Narxlar va to'lov ma'lumotlari\n"
                "‚Ä¢ Ish vaqti va jadval\n"
                "‚Ä¢ Muhim telefon raqamlar\n\n"
                "Quyidagi bo'limlardan birini tanlang:"
                if lang == 'uz' else
                "üîß <b>–ü–æ–º–æ—â—å –∑–∞–∫–∞–∑–∞ - –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
                "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞\n"
                "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏\n"
                "‚Ä¢ –¶–µ–Ω—ã –∏ –ø–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
                "‚Ä¢ –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
                "‚Ä¢ –í–∞–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∏–∂–µ:"
            )
            
            sent_message = await message.answer(
                text=utils_text,
                reply_markup=get_order_utils_keyboard(lang),
                parse_mode='HTML'
            )
            
            await state.set_state(OrderUtilsStates.utils_menu)
            
        except Exception as e:
            await message.answer("‚ùå Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")

    @router.callback_query(F.data == "check_order_status")
    async def check_order_status(callback: CallbackQuery, state: FSMContext):
        """Check order status"""
        try:
            await callback.answer()
            
            # Mock order status
            status_info = await get_order_status("TX_12345678")
            
            status_text = (
                f"üìä <b>Buyurtma holati - To'liq ma'lumot</b>\n\n"
                f"üÜî <b>Buyurtma ID:</b> TX_12345678\n"
                f"üìà <b>Holat:</b> {status_info['status']}\n"
                f"üìä <b>Progress:</b> {status_info['progress']}%\n"
                f"‚è∞ <b>Taxminiy tugash:</b> {status_info['estimated_completion']}\n"
                f"üë®‚Äçüîß <b>Texnik:</b> {status_info['technician']}\n"
                f"üìù <b>Izoh:</b> {status_info['notes']}\n\n"
                f"üîÑ <b>Keyingi qadam:</b> Texnik xizmat yakunlanishi"
            )
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚¨ÖÔ∏è Orqaga", callback_data="back_to_utils")]
            ])
            
            await callback.message.edit_text(status_text, reply_markup=keyboard, parse_mode='HTML')
            
        except Exception as e:
            await callback.answer("‚ùå Xatolik yuz berdi")

    @router.callback_query(F.data == "back_to_utils")
    async def back_to_utils(callback: CallbackQuery, state: FSMContext):
        """Back to utils menu"""
        try:
            await callback.answer()
            
            user = await get_user_by_telegram_id(callback.from_user.id)
            lang = user.get('language', 'uz')
            
            utils_text = (
                "üîß <b>Buyurtma yordamchisi - To'liq ma'lumot</b>\n\n"
                "üìã <b>Mavjud funksiyalar:</b>\n"
                "‚Ä¢ Buyurtma holatini tekshirish\n"
                "‚Ä¢ Texnik xizmat ma'lumotlari\n"
                "‚Ä¢ Narxlar va to'lov ma'lumotlari\n"
                "‚Ä¢ Ish vaqti va jadval\n"
                "‚Ä¢ Muhim telefon raqamlar\n\n"
                "Quyidagi bo'limlardan birini tanlang:"
                if lang == 'uz' else
                "üîß <b>–ü–æ–º–æ—â—å –∑–∞–∫–∞–∑–∞ - –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>\n\n"
                "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
                "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞\n"
                "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏\n"
                "‚Ä¢ –¶–µ–Ω—ã –∏ –ø–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
                "‚Ä¢ –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n"
                "‚Ä¢ –í–∞–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–∏–∂–µ:"
            )
            
            await callback.message.edit_text(
                text=utils_text,
                reply_markup=get_order_utils_keyboard(lang),
                parse_mode='HTML'
            )
            
        except Exception as e:
            await callback.answer("‚ùå Xatolik yuz berdi")

    return router
