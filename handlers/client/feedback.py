"""
Client Feedback Handler - Simplified Implementation

This module handles client feedback functionality.
"""

from aiogram import F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from states.client_states import FeedbackStates
from filters.role_filter import RoleFilter

# Mock functions to replace utils and database imports
async def get_user_by_telegram_id(telegram_id: int):
    """Mock user data"""
    return {
        'id': 1,
        'telegram_id': telegram_id,
        'role': 'client',
        'language': 'uz',
        'full_name': 'Test Client',
        'phone_number': '+998901234567'
    }

async def get_user_lang(user_id: int) -> str:
    """Mock get user language"""
    return 'uz'

async def get_user_role(user_id: int) -> str:
    """Mock get user role"""
    return 'client'

def get_client_feedback_router():
    """Get client feedback router with role filtering"""
    from aiogram import Router
    router = Router()
    
    # Apply role filter
    role_filter = RoleFilter("client")
    router.message.filter(role_filter)
    router.callback_query.filter(role_filter)

    @router.message(F.text.in_(["üí¨ Fikr bildirish", "üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"]))
    async def feedback_handler(message: Message, state: FSMContext):
        """Handle feedback request"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            lang = user.get('language', 'uz')
            
            feedback_text = (
                "üí¨ <b>Fikr bildirish</b>\n\n"
                "Sizning fikringiz biz uchun muhim! Iltimos, xizmatimiz haqida fikr bildiring.\n\n"
                "üìù Fikr yozish uchun quyidagi formatda yozing:\n"
                "‚Ä¢ Xizmat sifatini baholang (1-5 yulduz)\n"
                "‚Ä¢ Izoh qoldiring\n"
                "‚Ä¢ Takliflar bo'lsa yozing\n\n"
                "Masalan:\n"
                "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"
                "Ajoyib xizmat! Tez va sifatli ishlar. Rahmat!"
                if lang == 'uz' else
                "üí¨ <b>–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</b>\n\n"
                "–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö.\n\n"
                "üìù –î–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç:\n"
                "‚Ä¢ –û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥–∏ (1-5 –∑–≤–µ–∑–¥)\n"
                "‚Ä¢ –û—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n"
                "‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å\n\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
                "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê\n"
                "–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å! –ë—ã—Å—Ç—Ä–∞—è –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞. –°–ø–∞—Å–∏–±–æ!"
            )
            
            from keyboards.client_buttons import get_cancel_keyboard
            keyboard = get_cancel_keyboard(lang)
            
            await message.answer(feedback_text, reply_markup=keyboard, parse_mode='HTML')
            await state.set_state(FeedbackStates.waiting_for_feedback)
            
        except Exception as e:
            await message.answer("‚ùå Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")

    @router.message(FeedbackStates.waiting_for_feedback)
    async def process_feedback(message: Message, state: FSMContext):
        """Process user feedback"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            lang = user.get('language', 'uz')
            
            feedback_text = message.text
            
            # Save feedback (mock)
            feedback_data = {
                'user_id': user['id'],
                'feedback': feedback_text,
                'timestamp': '2024-01-15 10:30:00'
            }
            
            success_text = (
                "‚úÖ <b>Fikringiz qabul qilindi!</b>\n\n"
                "Rahmat, fikringiz biz uchun muhim. Sizning takliflaringiz xizmatimizni yaxshilashga yordam beradi.\n\n"
                "üìû Qo'shimcha savollaringiz bo'lsa, biz bilan bog'laning:\n"
                "‚Ä¢ Telefon: +998 71 123 45 67\n"
                "‚Ä¢ Telegram: @alfaconnect_support"
                if lang == 'uz' else
                "‚úÖ <b>–í–∞—à –æ—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç!</b>\n\n"
                "–°–ø–∞—Å–∏–±–æ, –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å. –í–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–º–æ–≥–∞—é—Ç —É–ª—É—á—à–∏—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å.\n\n"
                "üìû –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:\n"
                "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +998 71 123 45 67\n"
                "‚Ä¢ Telegram: @alfaconnect_support"
            )
            
            from keyboards.client_buttons import get_back_keyboard
            keyboard = get_back_keyboard(lang)
            
            await message.answer(success_text, reply_markup=keyboard, parse_mode='HTML')
            await state.clear()
            
        except Exception as e:
            await message.answer("‚ùå Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")

    @router.callback_query(F.data == "cancel_feedback")
    async def cancel_feedback(callback: CallbackQuery, state: FSMContext):
        """Cancel feedback"""
        try:
            await callback.answer()
            
            user = await get_user_by_telegram_id(callback.from_user.id)
            lang = user.get('language', 'uz')
            
            cancel_text = (
                "‚ùå Fikr bildirish bekor qilindi."
                if lang == 'uz' else
                "‚ùå –û—Ç–∑—ã–≤ –æ—Ç–º–µ–Ω–µ–Ω."
            )
            
            from keyboards.client_buttons import get_back_keyboard
            keyboard = get_back_keyboard(lang)
            
            await callback.message.edit_text(cancel_text, reply_markup=keyboard)
            await state.clear()
            
        except Exception as e:
            await callback.answer("‚ùå Xatolik yuz berdi", show_alert=True)

    return router
