"""
Call Center Supervisor Feedback Handler

This module implements feedback functionality for Call Center Supervisor role.
"""

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from typing import Dict, Any, List

# Keyboard imports
from keyboards.call_center_supervisor_buttons import get_feedback_keyboard
from keyboards.call_center_supervisor_buttons import (
    get_supervisor_feedback_keyboard
)

# States imports
from states.call_center_supervisor_states import CallCenterSupervisorFeedbackStates
from filters.role_filter import RoleFilter

# Mock functions to replace utils and database imports
async def get_user_by_telegram_id(telegram_id: int):
    """Mock user data"""
    return {
        'id': 1,
        'telegram_id': telegram_id,
        'role': 'call_center_supervisor',
        'language': 'uz',
        'full_name': 'Test Supervisor'
    }

async def get_user_lang(user_id: int) -> str:
    """Mock user language"""
    return 'uz'

# Removed duplicate get_role_router - using centralized version from utils.role_system

def get_call_center_supervisor_feedback_router():
    """Get router for call center supervisor feedback handlers"""
    router = Router()
    
    # Apply role filter
    role_filter = RoleFilter("call_center_supervisor")
    router.message.filter(role_filter)
    router.callback_query.filter(role_filter)

    @router.message(F.text.in_(["‚≠êÔ∏è Fikr-mulohaza", "‚≠êÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"]))
    async def call_center_supervisor_feedback(message: Message, state: FSMContext):
        """Call center supervisor feedback menu"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            
            if not user or user['role'] != 'call_center_supervisor':
                lang = user.get('language', 'uz') if user else 'uz'
                text = "Sizda call center supervisor huquqi yo'q." if lang == 'uz' else "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–≤–∞–π–∑–µ—Ä–∞ –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞."
                await message.answer(text)
                return
            
            lang = user.get('language', 'uz')
            
            text = (
                "‚≠êÔ∏è Fikr-mulohaza bo'limi\n\n"
                "Bu yerda siz:\n"
                "‚Ä¢ Tizim haqida fikr bildirishingiz\n"
                "‚Ä¢ Xodimlar ishlari haqida baholash berishingiz\n"
                "‚Ä¢ Taklif va shikoyatlar yuborishingiz mumkin\n\n"
                "Quyidagi variantlardan birini tanlang:"
            ) if lang == 'uz' else (
                "‚≠êÔ∏è –†–∞–∑–¥–µ–ª –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n\n"
                "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
                "‚Ä¢ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Å–∏—Å—Ç–µ–º–µ\n"
                "‚Ä¢ –û—Ü–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n"
                "‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∂–∞–ª–æ–±—ã\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:"
            )
            
            await message.answer(text, reply_markup=get_feedback_keyboard(lang))
            await state.set_state(CallCenterSupervisorFeedbackStates.feedback)
            
        except Exception as e:
            await message.answer("Xatolik yuz berdi. Iltimos, qaytadan urinib ko'ring.")

    @router.callback_query(F.data.startswith("ccs_"))
    async def handle_feedback_callbacks(callback: CallbackQuery, state: FSMContext):
        """Handle feedback callback queries"""
        try:
            user = await get_user_by_telegram_id(callback.from_user.id)
            if not user or user['role'] != 'call_center_supervisor':
                await callback.answer("Ruxsat yo'q", show_alert=True)
                return
            
            lang = user.get('language', 'uz')
            data = callback.data
            
            if data == "ccs_write_feedback":
                await _handle_write_feedback(callback, state, lang)
            elif data == "ccs_view_feedback":
                await _handle_view_feedback(callback, state, lang)
            elif data == "ccs_rate_service":
                await _handle_rate_service(callback, state, lang)
            elif data.startswith("ccs_rate_"):
                rating = int(data.split("_")[-1])
                await _handle_rating_selection(callback, state, rating, lang)
            elif data == "ccs_cancel_rating":
                await callback.message.edit_text(
                    "‚ùå Baholash bekor qilindi." if lang == 'uz' else "‚ùå –û—Ü–µ–Ω–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                    reply_markup=get_feedback_keyboard(lang)
                )
                await callback.answer()
            else:
                await callback.answer("Noma'lum buyruq", show_alert=True)
                
        except Exception as e:
            await callback.answer("Xatolik yuz berdi", show_alert=True)

    @router.message(CallCenterSupervisorFeedbackStates.writing_feedback)
    async def handle_feedback_text(message: Message, state: FSMContext):
        """Handle feedback text input"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            if not user or user['role'] != 'call_center_supervisor':
                return
            
            lang = user.get('language', 'uz')
            feedback_text = message.text.strip()
            
            if len(feedback_text) < 10:
                text = (
                    "‚ùå Fikr-mulohaza juda qisqa. Kamida 10 ta belgi kiriting."
                ) if lang == 'uz' else (
                    "‚ùå –û—Ç–∑—ã–≤ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤."
                )
                await message.answer(text)
                return
            
            # Here you would save the feedback to database
            # For now, just acknowledge receipt
            
            text = (
                f"‚úÖ Fikr-mulohazangiz qabul qilindi!\n\n"
                f"üìù Matn: {feedback_text[:100]}{'...' if len(feedback_text) > 100 else ''}\n\n"
                f"Rahmat! Sizning fikringiz biz uchun muhim."
            ) if lang == 'uz' else (
                f"‚úÖ –í–∞—à –æ—Ç–∑—ã–≤ –ø—Ä–∏–Ω—è—Ç!\n\n"
                f"üìù –¢–µ–∫—Å—Ç: {feedback_text[:100]}{'...' if len(feedback_text) > 100 else ''}\n\n"
                f"–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å."
            )
            
            await message.answer(text)
            await state.clear()
            
        except Exception as e:
            lang = await get_user_lang(message.from_user.id)
            error_text = "Xatolik yuz berdi" if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"
            await message.answer(error_text)

    return router


async def _handle_write_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle write feedback action"""
    try:
        text = (
            "üìù Fikr-mulohaza yozish\n\n"
            "Tizim ishlashi, xodimlar faoliyati yoki boshqa masalalar haqida "
            "o'z fikringizni yozing.\n\n"
            "Fikr-mulohazangizni kiriting:"
        ) if lang == 'uz' else (
            "üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –º–Ω–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã, –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ "
            "–∏–ª–∏ –¥—Ä—É–≥–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö.\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:"
        )
        
        await callback.message.edit_text(text)
        await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_view_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle view feedback action"""
    try:
        # Here you would fetch feedback from database
        # For now, show placeholder
        
        text = (
            "üìä Fikr-mulohazalar ko'rish\n\n"
            "Hozircha ko'rsatish uchun fikr-mulohazalar yo'q.\n\n"
            "Tez orada bu funksiya to'liq ishga tushadi."
        ) if lang == 'uz' else (
            "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤\n\n"
            "–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n\n"
            "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–Ω–∞."
        )
        
        await callback.message.edit_text(text, reply_markup=get_feedback_keyboard(lang))
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_rate_service(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle rate service action"""
    try:
        text = (
            "‚≠ê Xizmat sifatini baholash\n\n"
            "Tizim va xodimlar ishini qanday baholaysiz?\n\n"
            "1 - juda yomon, 5 - a'lo"
        ) if lang == 'uz' else (
            "‚≠ê –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è\n\n"
            "–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤?\n\n"
            "1 - –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ, 5 - –æ—Ç–ª–∏—á–Ω–æ"
        )
        
        keyboard = get_supervisor_feedback_keyboard(lang)
        
        await callback.message.edit_text(text, reply_markup=keyboard)
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_rating_selection(callback: CallbackQuery, state: FSMContext, rating: int, lang: str):
    """Handle rating selection"""
    try:
        # Here you would save the rating to database
        
        stars = "‚≠ê" * rating
        text = (
            f"‚úÖ Baholash qabul qilindi!\n\n"
            f"Sizning bahongiz: {stars} ({rating}/5)\n\n"
            f"Rahmat! Sizning bahongiz biz uchun muhim."
        ) if lang == 'uz' else (
            f"‚úÖ –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n\n"
            f"–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: {stars} ({rating}/5)\n\n"
            f"–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞ –≤–∞–∂–Ω–∞ –¥–ª—è –Ω–∞—Å."
        )
        
        await callback.message.edit_text(text, reply_markup=get_feedback_keyboard(lang))
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)

    # Additional feedback handlers for enhanced functionality
    @router.message(F.text.in_(["‚≠ê Fikr yozish", "‚≠ê –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤"]))
    async def handle_write_feedback_quick(message: Message, state: FSMContext):
        """Quick access to write feedback"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            if not user or user['role'] != 'call_center_supervisor':
                return
            
            lang = user.get('language', 'uz')
            
            text = (
                "üìù Tezkor fikr-mulohaza\n\n"
                "Tizim, xodimlar yoki jarayonlar haqida fikringizni bildiring.\n\n"
                "Fikr-mulohazangizni yozing:"
            ) if lang == 'uz' else (
                "üìù –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∑—ã–≤\n\n"
                "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –º–Ω–µ–Ω–∏–µ–º –æ —Å–∏—Å—Ç–µ–º–µ, —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö.\n\n"
                "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:"
            )
            
            await message.answer(text)
            await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
            
        except Exception as e:
            await message.answer("Xatolik yuz berdi" if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

    @router.message(F.text.in_(["üìä Fikrlarni ko'rish", "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤"]))
    async def handle_view_feedback_quick(message: Message, state: FSMContext):
        """Quick access to view feedback"""
        try:
            user = await get_user_by_telegram_id(message.from_user.id)
            if not user or user['role'] != 'call_center_supervisor':
                return
            
            lang = user.get('language', 'uz')
            
            # Show feedback summary
            text = (
                "üìä Fikr-mulohazalar xulosasi\n\n"
                "üìà OXIRGI BAHOLASHLAR:\n"
                "‚Ä¢ O'rtacha baho: 4.2/5 ‚≠ê‚≠ê‚≠ê‚≠ê\n"
                "‚Ä¢ Jami baholashlar: 15\n"
                "‚Ä¢ Ijobiy fikrlar: 12 (80%)\n"
                "‚Ä¢ Taklif va shikoyatlar: 3\n\n"
                "üîù ENG KO'P TILGA OLINGAN:\n"
                "‚Ä¢ Tizim tezligi: 85% ijobiy\n"
                "‚Ä¢ Xodimlar xizmati: 90% ijobiy\n"
                "‚Ä¢ Interfeys qulayligi: 75% ijobiy\n\n"
                "üìù OXIRGI FIKRLAR:\n"
                "‚Ä¢ \"Tizim juda qulay, rahmat!\"\n"
                "‚Ä¢ \"Xodimlar tez javob berishadi\"\n"
                "‚Ä¢ \"Ba'zi funksiyalar sekinroq ishlaydi\"\n\n"
                "Batafsil hisobot uchun admin bilan bog'laning."
            ) if lang == 'uz' else (
                "üìä –°–≤–æ–¥–∫–∞ –æ—Ç–∑—ã–≤–æ–≤\n\n"
                "üìà –ü–û–°–õ–ï–î–ù–ò–ï –û–¶–ï–ù–ö–ò:\n"
                "‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: 4.2/5 ‚≠ê‚≠ê‚≠ê‚≠ê\n"
                "‚Ä¢ –í—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫: 15\n"
                "‚Ä¢ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã: 12 (80%)\n"
                "‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∂–∞–ª–æ–±—ã: 3\n\n"
                "üîù –ù–ê–ò–ë–û–õ–ï–ï –£–ü–û–ú–ò–ù–ê–ï–ú–û–ï:\n"
                "‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã: 85% –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö\n"
                "‚Ä¢ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: 90% –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö\n"
                "‚Ä¢ –£–¥–æ–±—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: 75% –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö\n\n"
                "üìù –ü–û–°–õ–ï–î–ù–ò–ï –û–¢–ó–´–í–´:\n"
                "‚Ä¢ \"–°–∏—Å—Ç–µ–º–∞ –æ—á–µ–Ω—å —É–¥–æ–±–Ω–∞—è, —Å–ø–∞—Å–∏–±–æ!\"\n"
                "‚Ä¢ \"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –±—ã—Å—Ç—Ä–æ –æ—Ç–≤–µ—á–∞—é—Ç\"\n"
                "‚Ä¢ \"–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –º–µ–¥–ª–µ–Ω–Ω–µ–µ\"\n\n"
                "–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            
            await message.answer(text, reply_markup=get_feedback_keyboard(lang))
            
        except Exception as e:
            await message.answer("Xatolik yuz berdi" if lang == 'uz' else "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")

    @router.callback_query(F.data.startswith("ccs_feedback_"))
    async def handle_advanced_feedback_callbacks(callback: CallbackQuery, state: FSMContext):
        """Handle advanced feedback callbacks"""
        try:
            user = await get_user_by_telegram_id(callback.from_user.id)
            if not user or user['role'] != 'call_center_supervisor':
                await callback.answer("Ruxsat yo'q", show_alert=True)
                return
            
            lang = user.get('language', 'uz')
            data = callback.data
            
            if data == "ccs_feedback_system":
                await _handle_system_feedback(callback, state, lang)
            elif data == "ccs_feedback_staff":
                await _handle_staff_feedback(callback, state, lang)
            elif data == "ccs_feedback_process":
                await _handle_process_feedback(callback, state, lang)
            elif data == "ccs_feedback_suggestion":
                await _handle_suggestion_feedback(callback, state, lang)
            elif data == "ccs_feedback_complaint":
                await _handle_complaint_feedback(callback, state, lang)
            else:
                await callback.answer("Noma'lum buyruq", show_alert=True)
                
        except Exception as e:
            await callback.answer("Xatolik yuz berdi", show_alert=True)

    return router


# Enhanced helper functions for feedback
async def _handle_system_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle system feedback"""
    try:
        text = (
            "üíª Tizim haqida fikr-mulohaza\n\n"
            "Tizimning quyidagi jihatlarini baholang:\n"
            "‚Ä¢ Tezlik va samaradorlik\n"
            "‚Ä¢ Interfeys qulayligi\n"
            "‚Ä¢ Funksionallik to'liqligi\n"
            "‚Ä¢ Barqarorlik va ishonchlilik\n\n"
            "Tizim haqidagi fikringizni yozing:"
        ) if lang == 'uz' else (
            "üíª –û—Ç–∑—ã–≤ –æ —Å–∏—Å—Ç–µ–º–µ\n\n"
            "–û—Ü–µ–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Å–ø–µ–∫—Ç—ã —Å–∏—Å—Ç–µ–º—ã:\n"
            "‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n"
            "‚Ä¢ –£–¥–æ–±—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
            "‚Ä¢ –ü–æ–ª–Ω–æ—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞\n"
            "‚Ä¢ –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ —Å–∏—Å—Ç–µ–º–µ:"
        )
        
        await callback.message.edit_text(text)
        await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
        await state.update_data(feedback_type="system")
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_staff_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle staff feedback"""
    try:
        text = (
            "üë• Xodimlar haqida fikr-mulohaza\n\n"
            "Xodimlarning quyidagi jihatlarini baholang:\n"
            "‚Ä¢ Professional mahorat\n"
            "‚Ä¢ Muloqot qobiliyati\n"
            "‚Ä¢ Javobgarlik va tezkorlik\n"
            "‚Ä¢ Mijozlarga munosabat\n\n"
            "Xodimlar ishlashi haqidagi fikringizni yozing:"
        ) if lang == 'uz' else (
            "üë• –û—Ç–∑—ã–≤ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö\n\n"
            "–û—Ü–µ–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Å–ø–µ–∫—Ç—ã —Ä–∞–±–æ—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n"
            "‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏\n"
            "‚Ä¢ –ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
            "‚Ä¢ –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∫–ª–∏–µ–Ω—Ç–∞–º\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:"
        )
        
        await callback.message.edit_text(text)
        await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
        await state.update_data(feedback_type="staff")
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_process_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle process feedback"""
    try:
        text = (
            "‚öôÔ∏è Jarayonlar haqida fikr-mulohaza\n\n"
            "Ish jarayonlarining quyidagi jihatlarini baholang:\n"
            "‚Ä¢ Buyurtmalarni qayta ishlash\n"
            "‚Ä¢ Mijozlar bilan muloqot\n"
            "‚Ä¢ Masalalarni hal qilish\n"
            "‚Ä¢ Hisobot va nazorat\n\n"
            "Ish jarayonlari haqidagi fikringizni yozing:"
        ) if lang == 'uz' else (
            "‚öôÔ∏è –û—Ç–∑—ã–≤ –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö\n\n"
            "–û—Ü–µ–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Å–ø–µ–∫—Ç—ã —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:\n"
            "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤\n"
            "‚Ä¢ –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏\n"
            "‚Ä¢ –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\n"
            "‚Ä¢ –û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö:"
        )
        
        await callback.message.edit_text(text)
        await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
        await state.update_data(feedback_type="process")
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_suggestion_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle suggestion feedback"""
    try:
        text = (
            "üí° Taklif va takliflar\n\n"
            "Tizimni yaxshilash uchun takliflaringizni bildiring:\n"
            "‚Ä¢ Yangi funksiyalar\n"
            "‚Ä¢ Mavjud funksiyalarni yaxshilash\n"
            "‚Ä¢ Ish jarayonlarini optimallashtirish\n"
            "‚Ä¢ Boshqa takliflar\n\n"
            "Takliflaringizni yozing:"
        ) if lang == 'uz' else (
            "üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n\n"
            "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–∏—Å—Ç–µ–º—ã:\n"
            "‚Ä¢ –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n"
            "‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π\n"
            "‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
            "‚Ä¢ –î—Ä—É–≥–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n\n"
            "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:"
        )
        
        await callback.message.edit_text(text)
        await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
        await state.update_data(feedback_type="suggestion")
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)


async def _handle_complaint_feedback(callback: CallbackQuery, state: FSMContext, lang: str):
    """Handle complaint feedback"""
    try:
        text = (
            "‚ö†Ô∏è Shikoyat va muammolar\n\n"
            "Quyidagi muammolar haqida xabar bering:\n"
            "‚Ä¢ Tizim xatoliklari\n"
            "‚Ä¢ Xodimlar bilan bog'liq muammolar\n"
            "‚Ä¢ Jarayon buzilishlari\n"
            "‚Ä¢ Boshqa shikoyatlar\n\n"
            "Muammo yoki shikoyatingizni batafsil yozing:"
        ) if lang == 'uz' else (
            "‚ö†Ô∏è –ñ–∞–ª–æ–±—ã –∏ –ø—Ä–æ–±–ª–µ–º—ã\n\n"
            "–°–æ–æ–±—â–∏—Ç–µ –æ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö:\n"
            "‚Ä¢ –û—à–∏–±–∫–∏ —Å–∏—Å—Ç–µ–º—ã\n"
            "‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏\n"
            "‚Ä¢ –ù–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
            "‚Ä¢ –î—Ä—É–≥–∏–µ –∂–∞–ª–æ–±—ã\n\n"
            "–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –∂–∞–ª–æ–±—É:"
        )
        
        await callback.message.edit_text(text)
        await state.set_state(CallCenterSupervisorFeedbackStates.writing_feedback)
        await state.update_data(feedback_type="complaint")
        await callback.answer()
        
    except Exception as e:
        await callback.answer("Xatolik yuz berdi", show_alert=True)