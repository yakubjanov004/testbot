from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from aiogram.filters.callback_data import CallbackData
from typing import List, Dict, Any

def get_call_center_main_keyboard(lang="uz"):
    """Call center main keyboard - returns main menu keyboard"""
    return call_center_main_menu_reply(lang)

def call_center_main_menu_reply(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Main menu keyboard for call center operator"""
    inbox = "üì• Inbox"
    orders = "üìù Buyurtmalar" if lang == 'uz' else "üìù –ó–∞–∫–∞–∑—ã"
    client_search = "üîç Mijoz qidirish" if lang == 'uz' else "üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞"
    create_connection = "üîå Ulanish arizasi yaratish" if lang == 'uz' else "üîå –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
    create_technical = "üîß Texnik xizmat yaratish" if lang == 'uz' else "üîß –°–æ–∑–¥–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∑–∞—è–≤–∫—É"
    call_management = "üìû Qo'ng'iroqlar boshqaruvi" if lang == 'uz' else "üìû –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞–º–∏"
    statistics = "üìä Statistikalar" if lang == 'uz' else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    feedback = "‚≠êÔ∏è Fikr-mulohaza" if lang == 'uz' else "‚≠êÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
    change_lang = "üåê Tilni o'zgartirish" if lang == 'uz' else "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
    webapp_text = "üåê Web ilovasi" if lang == 'uz' else "üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"

    keyboard = [
        [KeyboardButton(text=inbox)],
        [KeyboardButton(text=orders)],
        [KeyboardButton(text=client_search)],
        [KeyboardButton(text=create_connection), KeyboardButton(text=create_technical)],
        [KeyboardButton(text=call_management)],
        [KeyboardButton(text=statistics)],
        [KeyboardButton(text=feedback)],
        [KeyboardButton(text=change_lang)],
        [KeyboardButton(text=webapp_text, web_app=WebAppInfo(url="https://webapp-gamma-three.vercel.app/"))]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_call_center_quick_actions_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Quick actions menu for call center operator"""
    new_calls = "üìû Yangi qo'ng'iroqlar" if lang == 'uz' else "üìû –ù–æ–≤—ã–µ –∑–≤–æ–Ω–∫–∏"
    pending_callbacks = "‚è∞ Qayta qo'ng'iroqlar" if lang == 'uz' else "‚è∞ –û–±—Ä–∞—Ç–Ω—ã–µ –∑–≤–æ–Ω–∫–∏"
    active_orders = "‚ö° Faol buyurtmalar" if lang == 'uz' else "‚ö° –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã"
    daily_stats = "üìä Kunlik hisobot" if lang == 'uz' else "üìä –î–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç"
    client_support = "üÜò Mijoz yordami" if lang == 'uz' else "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤"
    back = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=new_calls), KeyboardButton(text=pending_callbacks)],
        [KeyboardButton(text=active_orders), KeyboardButton(text=daily_stats)],
        [KeyboardButton(text=client_support)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def new_order_reply_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """New order reply keyboard (only back button)"""
    back = "üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"
    keyboard = [
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def client_search_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Client search menu keyboard with search methods"""
    search_by_name = "üë§ Ism bo'yicha qidirish" if lang == 'uz' else "üë§ –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏"
    search_by_phone = "üì± Telefon bo'yicha qidirish" if lang == 'uz' else "üì± –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É"
    search_by_id = "üÜî ID bo'yicha qidirish" if lang == 'uz' else "üÜî –ü–æ–∏—Å–∫ –ø–æ ID"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text=search_by_name),
                KeyboardButton(text=search_by_phone)
            ],
            [
                KeyboardButton(text=search_by_id)
            ],
            [
                KeyboardButton(text=back_text)
            ]
        ],
        resize_keyboard=True
    )
    return keyboard

def get_client_actions_reply(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Reply keyboard for client actions"""
    order = "üìÑ Buyurtma yaratish" if lang == 'uz' else "üìÑ –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑"
    call = "üìû Qo'ng'iroq qilish" if lang == 'uz' else "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å"
    chat = "üí¨ Chat o'chirish" if lang == 'uz' else "üí¨ –ù–∞—á–∞—Ç—å —á–∞—Ç"
    details = "üîç To'liq ma'lumot" if lang == 'uz' else "üîç –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    back = "üîô Ortga" if lang == 'uz' else "üîô –ù–∞–∑–∞–¥"

    keyboard = [
        [KeyboardButton(text=order), KeyboardButton(text=call)],
        [KeyboardButton(text=chat), KeyboardButton(text=details)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def order_types_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Order types selection keyboard with workflow routing"""
    if lang == 'uz':
        types = [
            ("üîå O'rnatish (Ulanish)", "installation"),
            ("üì° Sozlash (Ulanish)", "setup"),
            ("üîß Ta'mirlash (Texnik)", "repair"),
            ("üß∞ Profilaktika (Texnik)", "maintenance"),
            ("‚ùì Konsultatsiya (To'g'ridan-to'g'ri)", "consultation")
        ]
    else:
        types = [
            ("üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ (–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)", "installation"),
            ("üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ (–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)", "setup"),
            ("üîß –†–µ–º–æ–Ω—Ç (–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è)", "repair"),
            ("üß∞ –ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ (–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è)", "maintenance"),
            ("‚ùì –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (–ü—Ä—è–º–∞—è)", "consultation")
        ]
    
    keyboard = []
    for text, type_ in types:
        keyboard.append([InlineKeyboardButton(text=text, callback_data=f"service_type_{type_}")])
    
    keyboard.append([InlineKeyboardButton(text=("üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"), callback_data="call_center_back")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def call_status_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Call status keyboard"""
    priorities = [
        ("üî¥ Yuqori", "high"),
        ("üü° O'rta", "medium"),
        ("üü¢ Past", "low")
    ]
    keyboard = [
        [InlineKeyboardButton(text=text, callback_data=f"priority_{priority}") for text, priority in priorities],
        [InlineKeyboardButton(text=("üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"), callback_data="call_center_back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def callback_schedule_keyboard(language: str) -> InlineKeyboardMarkup:
    """Callback scheduling keyboard"""
    schedule_in_1_hour_text = "‚è∞ 1 soatdan keyin" if language == "uz" else "‚è∞ –ß–µ—Ä–µ–∑ 1 —á–∞—Å"
    schedule_in_2_hours_text = "‚è∞ 2 soatdan keyin" if language == "uz" else "‚è∞ –ß–µ—Ä–µ–∑ 2 —á–∞—Å–∞"
    schedule_tomorrow_text = "üìÖ Ertaga" if language == "uz" else "üìÖ –ó–∞–≤—Ç—Ä–∞"
    custom_time_text = "üïê Maxsus vaqt" if language == "uz" else "üïê –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è"
    back_text = "‚óÄÔ∏è Orqaga" if language == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [
            InlineKeyboardButton(
                text=schedule_in_1_hour_text,
                callback_data="callback_1h"
            )
        ],
        [
            InlineKeyboardButton(
                text=schedule_in_2_hours_text,
                callback_data="callback_2h"
            )
        ],
        [
            InlineKeyboardButton(
                text=schedule_tomorrow_text,
                callback_data="callback_tomorrow"
            )
        ],
        [
            InlineKeyboardButton(
                text=custom_time_text,
                callback_data="callback_custom"
            )
        ],
        [
            InlineKeyboardButton(
                text=back_text,
                callback_data="call_center_back"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def call_result_keyboard(language: str) -> InlineKeyboardMarkup:
    """Call result keyboard"""
    order_created_text = "‚úÖ Buyurtma yaratildi" if language == "uz" else "‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω"
    callback_scheduled_text = "üìû Qayta qo'ng'iroq rejalashtirildi" if language == "uz" else "üìû –û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω"
    information_provided_text = "‚ÑπÔ∏è Ma'lumot berildi" if language == "uz" else "‚ÑπÔ∏è –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    no_answer_text = "üìµ Javob yo'q" if language == "uz" else "üìµ –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞"
    client_refused_text = "‚ùå Mijoz rad etdi" if language == "uz" else "‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–∞–∑–∞–ª—Å—è"
    
    keyboard = [
        [
            InlineKeyboardButton(
                text=order_created_text,
                callback_data="call_result_order"
            )
        ],
        [
            InlineKeyboardButton(
                text=callback_scheduled_text,
                callback_data="call_result_callback"
            )
        ],
        [
            InlineKeyboardButton(
                text=information_provided_text,
                callback_data="call_result_info"
            )
        ],
        [
            InlineKeyboardButton(
                text=no_answer_text,
                callback_data="call_result_no_answer"
            )
        ],
        [
            InlineKeyboardButton(
                text=client_refused_text,
                callback_data="call_result_refused"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)



def call_center_statistics_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Call center statistics menu"""
    daily_stats = "üìÖ Bugungi ko'rsatkichlar" if lang == 'uz' else "üìÖ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏"
    weekly_stats = "üìä Haftalik hisobot" if lang == 'uz' else "üìä –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"
    monthly_stats = "üìà Oylik hisobot" if lang == 'uz' else "üìà –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç"
    performance = "üéØ Mening samaradorligim" if lang == 'uz' else "üéØ –ú–æ—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
    conversion = "üìà Konversiya darajasi" if lang == 'uz' else "üìà –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏–∏"
    back = "üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=daily_stats),
         KeyboardButton(text=weekly_stats)],
        [KeyboardButton(text=monthly_stats),
         KeyboardButton(text=performance)],
        [KeyboardButton(text=conversion)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def call_center_operator_main_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Call center operator main menu"""
    direct_resolution = "üìã Masofadan hal qilish" if lang == 'uz' else "üìã –£–¥–∞–ª–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ"
    remote_support = "üîß Masofaviy yordam" if lang == 'uz' else "üîß –£–¥–∞–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
    client_consultation = "üí¨ Mijoz maslahati" if lang == 'uz' else "üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞"
    technical_guidance = "üìö Texnik ko'rsatma" if lang == 'uz' else "üìö –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"
    back = "üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=direct_resolution), KeyboardButton(text=remote_support)],
        [KeyboardButton(text=client_consultation), KeyboardButton(text=technical_guidance)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def call_center_supervisor_main_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Call center supervisor main menu"""
    assign_requests = "üìã So'rovlarni tayinlash" if lang == 'uz' else "üìã –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã"
    pending_assignments = "‚è≥ Kutilayotgan tayinlashlar" if lang == 'uz' else "‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è"
    team_performance = "üìä Jamoa samaradorligi" if lang == 'uz' else "üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã"
    back = "üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=assign_requests), KeyboardButton(text=pending_assignments)],
        [KeyboardButton(text=team_performance)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def call_center_operator_selection_keyboard(operators: list, lang: str = 'uz') -> InlineKeyboardMarkup:
    """Keyboard for selecting call center operator"""
    keyboard = []
    
    for operator in operators:
        operator_name = operator.get('full_name', f"Operator {operator['id']}")
        keyboard.append([
            InlineKeyboardButton(
                text=f"üë§ {operator_name}",
                callback_data=f"assign_cc_operator_{operator['id']}"
            )
        ])
    
    back_text = "üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text=back_text, callback_data="cc_supervisor_back")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def remote_resolution_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Keyboard for remote resolution actions"""
    resolve_text = "‚úÖ Masofadan hal qilish" if lang == 'uz' else "‚úÖ –†–µ—à–∏—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ"
    escalate_text = "‚¨ÜÔ∏è Yuqoriga ko'tarish" if lang == 'uz' else "‚¨ÜÔ∏è –≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞—Ç—å"
    back_text = "üîÑ Orqaga" if lang == 'uz' else "üîÑ –ù–∞–∑–∞–¥"
    
    keyboard = [
        [InlineKeyboardButton(text=resolve_text, callback_data="resolve_remotely")],
        [InlineKeyboardButton(text=escalate_text, callback_data="escalate_request")],
        [InlineKeyboardButton(text=back_text, callback_data="cc_operator_back")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def rating_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Rating keyboard for client feedback"""
    rating_text = "Xizmatni baholang" if lang == 'uz' else "–û—Ü–µ–Ω–∏—Ç–µ —É—Å–ª—É–≥—É"
    
    keyboard = []
    for i in range(1, 6):
        star_text = "‚≠ê" * i
        keyboard.append([
            InlineKeyboardButton(
                text=f"{star_text} ({i})",
                callback_data=f"rate_service_{i}"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# Additional Reply Keyboards for Call Center
def get_call_center_orders_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Orders management menu for call center operator"""
    my_orders = "üìã Mening buyurtmalarim" if lang == 'uz' else "üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã"
    new_orders = "üÜï Yangi buyurtmalar" if lang == 'uz' else "üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã"
    in_progress = "‚è≥ Jarayondagi" if lang == 'uz' else "‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"
    completed = "‚úÖ Bajarilgan" if lang == 'uz' else "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ"
    pending_review = "üëÅÔ∏è Ko'rib chiqilmoqda" if lang == 'uz' else "üëÅÔ∏è –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
    search_orders = "üîç Buyurtma qidirish" if lang == 'uz' else "üîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤"
    back = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=my_orders), KeyboardButton(text=new_orders)],
        [KeyboardButton(text=in_progress), KeyboardButton(text=completed)],
        [KeyboardButton(text=pending_review), KeyboardButton(text=search_orders)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_call_management_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Call management menu for call center operator"""
    incoming_calls = "üìû Kiruvchi qo'ng'iroqlar" if lang == 'uz' else "üìû –í—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏"
    outgoing_calls = "üì§ Chiquvchi qo'ng'iroqlar" if lang == 'uz' else "üì§ –ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏"
    scheduled_callbacks = "‚è∞ Rejalashtirilgan qo'ng'iroqlar" if lang == 'uz' else "‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏"
    call_history = "üìã Qo'ng'iroqlar tarixi" if lang == 'uz' else "üìã –ò—Å—Ç–æ—Ä–∏—è –∑–≤–æ–Ω–∫–æ–≤"
    call_notes = "üìù Qo'ng'iroq eslatmalari" if lang == 'uz' else "üìù –ó–∞–º–µ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤"
    call_stats = "üìä Qo'ng'iroq statistikasi" if lang == 'uz' else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–≤–æ–Ω–∫–æ–≤"
    back = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=incoming_calls), KeyboardButton(text=outgoing_calls)],
        [KeyboardButton(text=scheduled_callbacks), KeyboardButton(text=call_history)],
        [KeyboardButton(text=call_notes), KeyboardButton(text=call_stats)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_client_support_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Client support menu for call center operator"""
    technical_support = "üîß Texnik yordam" if lang == 'uz' else "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
    billing_support = "üí∞ Hisob-kitob yordami" if lang == 'uz' else "üí∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ —Å—á–µ—Ç–∞–º"
    service_info = "‚ÑπÔ∏è Xizmat ma'lumotlari" if lang == 'uz' else "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–∞—Ö"
    complaint_handling = "‚ö†Ô∏è Shikoyatlar" if lang == 'uz' else "‚ö†Ô∏è –ñ–∞–ª–æ–±—ã"
    general_inquiry = "‚ùì Umumiy so'rovlar" if lang == 'uz' else "‚ùì –û–±—â–∏–µ –∑–∞–ø—Ä–æ—Å—ã"
    escalate_issue = "‚¨ÜÔ∏è Muammoni ko'tarish" if lang == 'uz' else "‚¨ÜÔ∏è –≠—Å–∫–∞–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É"
    back = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=technical_support), KeyboardButton(text=billing_support)],
        [KeyboardButton(text=service_info), KeyboardButton(text=complaint_handling)],
        [KeyboardButton(text=general_inquiry), KeyboardButton(text=escalate_issue)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_call_center_analytics_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Analytics menu for call center operator"""
    daily_performance = "üìä Kunlik samaradorlik" if lang == 'uz' else "üìä –î–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
    weekly_report = "üìà Haftalik hisobot" if lang == 'uz' else "üìà –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"
    monthly_summary = "üìâ Oylik xulosa" if lang == 'uz' else "üìâ –ú–µ—Å—è—á–Ω–∞—è —Å–≤–æ–¥–∫–∞"
    call_metrics = "üìû Qo'ng'iroq ko'rsatkichlari" if lang == 'uz' else "üìû –ú–µ—Ç—Ä–∏–∫–∏ –∑–≤–æ–Ω–∫–æ–≤"
    resolution_rate = "‚úÖ Hal qilish darajasi" if lang == 'uz' else "‚úÖ –£—Ä–æ–≤–µ–Ω—å —Ä–µ—à–µ–Ω–∏—è"
    customer_satisfaction = "‚≠ê Mijoz mamnunligi" if lang == 'uz' else "‚≠ê –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤"
    back = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=daily_performance), KeyboardButton(text=weekly_report)],
        [KeyboardButton(text=monthly_summary), KeyboardButton(text=call_metrics)],
        [KeyboardButton(text=resolution_rate), KeyboardButton(text=customer_satisfaction)],
        [KeyboardButton(text=back)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


# Enhanced Inline Keyboards for Call Center
def get_order_management_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Order management inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìã Yangi buyurtmalar" if lang == 'uz' else "üìã –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã",
                callback_data="cc_new_orders"
            ),
            InlineKeyboardButton(
                text="‚è≥ Jarayondagi" if lang == 'uz' else "‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ",
                callback_data="cc_in_progress_orders"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚úÖ Bajarilgan" if lang == 'uz' else "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ",
                callback_data="cc_completed_orders"
            ),
            InlineKeyboardButton(
                text="‚ùå Bekor qilingan" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ",
                callback_data="cc_cancelled_orders"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîç Qidirish" if lang == 'uz' else "üîç –ü–æ–∏—Å–∫",
                callback_data="cc_search_orders"
            ),
            InlineKeyboardButton(
                text="üìä Statistika" if lang == 'uz' else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                callback_data="cc_orders_stats"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Yopish" if lang == 'uz' else "‚ùå –ó–∞–∫—Ä—ã—Ç—å",
                callback_data="cc_close_menu"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_client_search_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Client search inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üì± Telefon" if lang == 'uz' else "üì± –¢–µ–ª–µ—Ñ–æ–Ω",
                callback_data="cc_search_phone"
            ),
            InlineKeyboardButton(
                text="üë§ Ism" if lang == 'uz' else "üë§ –ò–º—è",
                callback_data="cc_search_name"
            )
        ],
        [
            InlineKeyboardButton(
                text="üÜî ID" if lang == 'uz' else "üÜî ID",
                callback_data="cc_search_id"
            ),
            InlineKeyboardButton(
                text="üìß Email" if lang == 'uz' else "üìß Email",
                callback_data="cc_search_email"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ûï Yangi mijoz" if lang == 'uz' else "‚ûï –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç",
                callback_data="cc_new_client"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilish" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cc_cancel_search"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_application_type_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Application type selection inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üîå Ulanish arizasi" if lang == 'uz' else "üîå –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ",
                callback_data="cc_app_connection"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîß Texnik xizmat" if lang == 'uz' else "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
                callback_data="cc_app_technical"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìû Qo'ng'iroq markazi" if lang == 'uz' else "üìû –ö–æ–ª–ª-—Ü–µ–Ω—Ç—Ä",
                callback_data="cc_app_call_center"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilish" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cc_cancel_app"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_call_actions_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Call actions inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìû Qo'ng'iroq qilish" if lang == 'uz' else "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å",
                callback_data="cc_make_call"
            ),
            InlineKeyboardButton(
                text="üìù Eslatma qo'shish" if lang == 'uz' else "üìù –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É",
                callback_data="cc_add_note"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚è∞ Qayta qo'ng'iroq" if lang == 'uz' else "‚è∞ –û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫",
                callback_data="cc_schedule_callback"
            ),
            InlineKeyboardButton(
                text="‚úÖ Masofadan hal qilish" if lang == 'uz' else "‚úÖ –†–µ—à–∏—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ",
                callback_data="cc_resolve_remote"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÜÔ∏è Eskalatsiya" if lang == 'uz' else "‚¨ÜÔ∏è –≠—Å–∫–∞–ª–∞—Ü–∏—è",
                callback_data="cc_escalate"
            ),
            InlineKeyboardButton(
                text="üìã Buyurtma yaratish" if lang == 'uz' else "üìã –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑",
                callback_data="cc_create_order"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Yopish" if lang == 'uz' else "‚ùå –ó–∞–∫—Ä—ã—Ç—å",
                callback_data="cc_close_menu"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_order_actions_inline_menu(order_id: int, lang: str = 'uz') -> InlineKeyboardMarkup:
    """Order actions inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üëÅÔ∏è Ko'rish" if lang == 'uz' else "üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä",
                callback_data=f"cc_view_order_{order_id}"
            ),
            InlineKeyboardButton(
                text="üìù Tahrirlash" if lang == 'uz' else "üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data=f"cc_edit_order_{order_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîÑ Status o'zgartirish" if lang == 'uz' else "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                callback_data=f"cc_change_status_{order_id}"
            ),
            InlineKeyboardButton(
                text="üìû Mijozga qo'ng'iroq" if lang == 'uz' else "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É",
                callback_data=f"cc_call_client_{order_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="üí¨ Izoh qo'shish" if lang == 'uz' else "üí¨ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
                callback_data=f"cc_add_comment_{order_id}"
            ),
            InlineKeyboardButton(
                text="‚¨ÜÔ∏è Eskalatsiya" if lang == 'uz' else "‚¨ÜÔ∏è –≠—Å–∫–∞–ª–∞—Ü–∏—è",
                callback_data=f"cc_escalate_order_{order_id}"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Yopish" if lang == 'uz' else "‚ùå –ó–∞–∫—Ä—ã—Ç—å",
                callback_data="cc_close_menu"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_priority_selection_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Priority selection inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üî¥ Yuqori" if lang == 'uz' else "üî¥ –í—ã—Å–æ–∫–∏–π",
                callback_data="cc_priority_high"
            ),
            InlineKeyboardButton(
                text="üü° O'rta" if lang == 'uz' else "üü° –°—Ä–µ–¥–Ω–∏–π",
                callback_data="cc_priority_medium"
            )
        ],
        [
            InlineKeyboardButton(
                text="üü¢ Past" if lang == 'uz' else "üü¢ –ù–∏–∑–∫–∏–π",
                callback_data="cc_priority_low"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilish" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cc_cancel_priority"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_status_change_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Status change inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üÜï Yangi" if lang == 'uz' else "üÜï –ù–æ–≤—ã–π",
                callback_data="cc_status_new"
            ),
            InlineKeyboardButton(
                text="‚è≥ Jarayonda" if lang == 'uz' else "‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ",
                callback_data="cc_status_in_progress"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚úÖ Bajarilgan" if lang == 'uz' else "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω",
                callback_data="cc_status_completed"
            ),
            InlineKeyboardButton(
                text="‚è∏Ô∏è To'xtatilgan" if lang == 'uz' else "‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
                callback_data="cc_status_on_hold"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilingan" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–µ–Ω",
                callback_data="cc_status_cancelled"
            ),
            InlineKeyboardButton(
                text="üî¥ Muammo" if lang == 'uz' else "üî¥ –ü—Ä–æ–±–ª–µ–º–∞",
                callback_data="cc_status_issue"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilish" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cc_cancel_status"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_feedback_inline_menu(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Feedback inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìù Fikr yozish" if lang == 'uz' else "üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤",
                callback_data="cc_write_feedback"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä Fikrlarni ko'rish" if lang == 'uz' else "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤",
                callback_data="cc_view_feedback"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚≠ê Baholash" if lang == 'uz' else "‚≠ê –û—Ü–µ–Ω–∏—Ç—å",
                callback_data="cc_rate_service"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Yopish" if lang == 'uz' else "‚ùå –ó–∞–∫—Ä—ã—Ç—å",
                callback_data="cc_close_menu"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_language_selection_inline_menu() -> InlineKeyboardMarkup:
    """Language selection inline keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üá∫üáø O'zbekcha",
                callback_data="cc_lang_uz"
            ),
            InlineKeyboardButton(
                text="üá∑üá∫ –†—É—Å—Å–∫–∏–π",
                callback_data="cc_lang_ru"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilish",
                callback_data="cc_cancel_lang"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_order_list_keyboard(orders: List[Dict[str, Any]], page: int = 0, lang: str = 'uz') -> InlineKeyboardMarkup:
    """Generate keyboard for order list with pagination"""
    keyboard = []
    
    # Show orders (5 per page)
    start_idx = page * 5
    end_idx = min(start_idx + 5, len(orders))
    
    for i in range(start_idx, end_idx):
        order = orders[i]
        status_emoji = _get_status_emoji(order['status'])
        client_name = order.get('client_name', 'N/A')[:15]
        text = f"{status_emoji} #{order['id']} - {client_name}"
        keyboard.append([
            InlineKeyboardButton(
                text=text,
                callback_data=f"cc_view_order_{order['id']}"
            )
        ])
    
    # Pagination buttons
    nav_buttons = []
    if page > 0:
        nav_buttons.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è Oldingi" if lang == 'uz' else "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è",
                callback_data=f"cc_orders_page_{page-1}"
            )
        )
    
    if end_idx < len(orders):
        nav_buttons.append(
            InlineKeyboardButton(
                text="Keyingi ‚û°Ô∏è" if lang == 'uz' else "–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è",
                callback_data=f"cc_orders_page_{page+1}"
            )
        )
    
    if nav_buttons:
        keyboard.append(nav_buttons)
    
    # Close button
    keyboard.append([
        InlineKeyboardButton(
            text="‚ùå Yopish" if lang == 'uz' else "‚ùå –ó–∞–∫—Ä—ã—Ç—å",
            callback_data="cc_close_menu"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_client_list_keyboard(clients: List[Dict[str, Any]], lang: str = 'uz') -> InlineKeyboardMarkup:
    """Generate keyboard for client list"""
    keyboard = []
    
    for client in clients[:8]:  # Limit to 8 clients
        name = client.get('full_name', 'N/A')[:20]
        phone = client.get('phone', 'N/A')
        text = f"üë§ {name} - {phone}"
        keyboard.append([
            InlineKeyboardButton(
                text=text,
                callback_data=f"cc_select_client_{client['id']}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton(
            text="üîç Boshqa qidirish" if lang == 'uz' else "üîç –î—Ä—É–≥–æ–π –ø–æ–∏—Å–∫",
            callback_data="cc_search_again"
        )
    ])
    
    keyboard.append([
        InlineKeyboardButton(
            text="‚ùå Bekor qilish" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cc_cancel_search"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def _get_status_emoji(status: str) -> str:
    """Get emoji for order status"""
    status_emojis = {
        'new': 'üÜï',
        'assigned': 'üë§',
        'in_progress': '‚è≥',
        'on_hold': '‚è∏Ô∏è',
        'completed': '‚úÖ',
        'cancelled': '‚ùå',
        'issue': 'üî¥',
        'escalated': '‚¨ÜÔ∏è',
        'pending': '‚è≥',
        'review': 'üëÅÔ∏è'
    }
    return status_emojis.get(status, '‚ùì')

def get_language_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Call center uchun til tanlash inline keyboard"""
    uz_text = "üá∫üáø O'zbekcha" if lang == "uz" else "üá∫üáø –£–∑–±–µ–∫—Å–∫–∏–π"
    ru_text = "üá∑üá∫ Ruscha" if lang == "uz" else "üá∑üá∫ –†—É—Å—Å–∫–∏–π"

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=uz_text, callback_data="cc_lang_uz")],
            [InlineKeyboardButton(text=ru_text, callback_data="cc_lang_ru")]
        ]
    )
    return keyboard

def get_chat_keyboard(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Chat keyboard for call center operators"""
    active_chats_text = "üì± Faol chatlar" if lang == 'uz' else "üì± –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã"
    waiting_chats_text = "‚è≥ Kutilayotgan chatlar" if lang == 'uz' else "‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ —á–∞—Ç—ã"
    chat_history_text = "üìã Chat tarixi" if lang == 'uz' else "üìã –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤"
    chat_settings_text = "‚öôÔ∏è Chat sozlamalari" if lang == 'uz' else "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=active_chats_text)],
        [KeyboardButton(text=waiting_chats_text)],
        [KeyboardButton(text=chat_history_text)],
        [KeyboardButton(text=chat_settings_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_clients_keyboard(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Clients keyboard for call center operators"""
    search_client_text = "üîç Mijoz qidirish" if lang == 'uz' else "üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞"
    clients_list_text = "üìã Mijozlar ro'yxati" if lang == 'uz' else "üìã –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"
    add_client_text = "‚ûï Yangi mijoz qo'shish" if lang == 'uz' else "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"
    client_profile_text = "üë§ Mijoz profili" if lang == 'uz' else "üë§ –ü—Ä–æ—Ñ–∏–ª—å –∫–ª–∏–µ–Ω—Ç–∞"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=search_client_text)],
        [KeyboardButton(text=clients_list_text)],
        [KeyboardButton(text=add_client_text)],
        [KeyboardButton(text=client_profile_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_direct_resolution_keyboard(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Direct resolution keyboard for call center operators"""
    technical_issues_text = "üîß Texnik muammolar" if lang == 'uz' else "üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
    connection_issues_text = "üîå Ulanish muammolari" if lang == 'uz' else "üîå –ü—Ä–æ–±–ª–µ–º—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
    billing_issues_text = "üí∞ Hisob-kitob muammolari" if lang == 'uz' else "üí∞ –ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π"
    service_questions_text = "‚ùì Xizmat savollari" if lang == 'uz' else "‚ùì –í–æ–ø—Ä–æ—Å—ã –ø–æ —É—Å–ª—É–≥–∞–º"
    remote_assistance_text = "üñ•Ô∏è Masofaviy yordam" if lang == 'uz' else "üñ•Ô∏è –£–¥–∞–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å"
    escalation_text = "‚¨ÜÔ∏è Eskalatsiya" if lang == 'uz' else "‚¨ÜÔ∏è –≠—Å–∫–∞–ª–∞—Ü–∏—è"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=technical_issues_text)],
        [KeyboardButton(text=connection_issues_text)],
        [KeyboardButton(text=billing_issues_text)],
        [KeyboardButton(text=service_questions_text)],
        [KeyboardButton(text=remote_assistance_text)],
        [KeyboardButton(text=escalation_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_feedback_keyboard(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Feedback keyboard for call center operators"""
    write_feedback_text = "üìù Fikr yozish" if lang == 'uz' else "üìù –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤"
    view_feedback_text = "üìä Fikrlarni ko'rish" if lang == 'uz' else "üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤"
    rate_service_text = "‚≠ê Xizmatni baholash" if lang == 'uz' else "‚≠ê –û—Ü–µ–Ω–∏—Ç—å —É—Å–ª—É–≥—É"
    feedback_stats_text = "üìà Fikr statistikasi" if lang == 'uz' else "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=write_feedback_text)],
        [KeyboardButton(text=view_feedback_text)],
        [KeyboardButton(text=rate_service_text)],
        [KeyboardButton(text=feedback_stats_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_inbox_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Inbox menu keyboard for call center operators"""
    new_messages_text = "üÜï Yangi xabarlar" if lang == 'uz' else "üÜï –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    unread_messages_text = "üì® O'qilmagan xabarlar" if lang == 'uz' else "üì® –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    urgent_messages_text = "üö® Shoshilinch xabarlar" if lang == 'uz' else "üö® –°—Ä–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    all_messages_text = "üìã Barcha xabarlar" if lang == 'uz' else "üìã –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
    message_history_text = "üìú Xabar tarixi" if lang == 'uz' else "üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=new_messages_text)],
        [KeyboardButton(text=unread_messages_text)],
        [KeyboardButton(text=urgent_messages_text)],
        [KeyboardButton(text=all_messages_text)],
        [KeyboardButton(text=message_history_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_message_actions_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Message actions menu keyboard for call center operators"""
    reply_text = "üí¨ Javob berish" if lang == 'uz' else "üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å"
    forward_text = "‚û°Ô∏è Yuborish" if lang == 'uz' else "‚û°Ô∏è –ü–µ—Ä–µ—Å–ª–∞—Ç—å"
    mark_read_text = "‚úÖ O'qilgan deb belgilash" if lang == 'uz' else "‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ"
    mark_urgent_text = "üö® Shoshilinch deb belgilash" if lang == 'uz' else "üö® –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ —Å—Ä–æ—á–Ω–æ–µ"
    archive_text = "üìÅ Arxivga ko'chirish" if lang == 'uz' else "üìÅ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
    delete_text = "üóëÔ∏è O'chirish" if lang == 'uz' else "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=reply_text), KeyboardButton(text=forward_text)],
        [KeyboardButton(text=mark_read_text), KeyboardButton(text=mark_urgent_text)],
        [KeyboardButton(text=archive_text), KeyboardButton(text=delete_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_orders_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Orders menu keyboard for call center operators"""
    my_orders_text = "üìã Mening buyurtmalarim" if lang == 'uz' else "üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã"
    new_orders_text = "üÜï Yangi buyurtmalar" if lang == 'uz' else "üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã"
    in_progress_text = "‚è≥ Jarayondagi" if lang == 'uz' else "‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"
    completed_text = "‚úÖ Bajarilgan" if lang == 'uz' else "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ"
    pending_review_text = "üëÅÔ∏è Ko'rib chiqilmoqda" if lang == 'uz' else "üëÅÔ∏è –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏"
    search_orders_text = "üîç Buyurtma qidirish" if lang == 'uz' else "üîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–æ–≤"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=my_orders_text), KeyboardButton(text=new_orders_text)],
        [KeyboardButton(text=in_progress_text), KeyboardButton(text=completed_text)],
        [KeyboardButton(text=pending_review_text), KeyboardButton(text=search_orders_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_order_actions_menu(lang: str = 'uz') -> ReplyKeyboardMarkup:
    """Order actions menu keyboard for call center operators"""
    view_order_text = "üëÅÔ∏è Buyurtmani ko'rish" if lang == 'uz' else "üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞"
    edit_order_text = "üìù Tahrirlash" if lang == 'uz' else "üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
    change_status_text = "üîÑ Status o'zgartirish" if lang == 'uz' else "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    call_client_text = "üìû Mijozga qo'ng'iroq" if lang == 'uz' else "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É"
    add_comment_text = "üí¨ Izoh qo'shish" if lang == 'uz' else "üí¨ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
    escalate_text = "‚¨ÜÔ∏è Eskalatsiya" if lang == 'uz' else "‚¨ÜÔ∏è –≠—Å–∫–∞–ª–∞—Ü–∏—è"
    back_text = "‚¨ÖÔ∏è Orqaga" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    
    keyboard = [
        [KeyboardButton(text=view_order_text), KeyboardButton(text=edit_order_text)],
        [KeyboardButton(text=change_status_text), KeyboardButton(text=call_client_text)],
        [KeyboardButton(text=add_comment_text), KeyboardButton(text=escalate_text)],
        [KeyboardButton(text=back_text)]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# New centralized keyboard functions for call center module
def get_rating_statistics_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Rating statistics keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìà Batafsil hisobot" if lang == 'uz' else "üìà –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç",
                callback_data="detailed_rating_report"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä Reyting grafigi" if lang == 'uz' else "üìä –ì—Ä–∞—Ñ–∏–∫ —Ä–µ–π—Ç–∏–Ω–≥–∞",
                callback_data="rating_chart"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_feedback_complaints_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Feedback and complaints keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìã Barcha fikrlar" if lang == 'uz' else "üìã –í—Å–µ –æ—Ç–∑—ã–≤—ã",
                callback_data="view_all_feedback"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìä Fikrlar statistikasi" if lang == 'uz' else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤",
                callback_data="feedback_statistics"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_top_operators_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Top operators keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìä Batafsil reyting" if lang == 'uz' else "üìä –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥",
                callback_data="detailed_operator_rating"
            )
        ],
        [
            InlineKeyboardButton(
                text="üèÜ Mukofotlar" if lang == 'uz' else "üèÜ –ù–∞–≥—Ä–∞–¥—ã",
                callback_data="operator_rewards"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_rating_dynamics_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Rating dynamics keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìä Grafik ko'rinish" if lang == 'uz' else "üìä –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –≤–∏–¥",
                callback_data="rating_dynamics_chart"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìà Batafsil tahlil" if lang == 'uz' else "üìà –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑",
                callback_data="detailed_rating_analysis"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_rating_settings_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Rating settings keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìù Reyting shablonlari" if lang == 'uz' else "üìù –®–∞–±–ª–æ–Ω—ã —Ä–µ–π—Ç–∏–Ω–≥–∞",
                callback_data="rating_templates"
            )
        ],
        [
            InlineKeyboardButton(
                text="üîß Boshqa sozlamalar" if lang == 'uz' else "üîß –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                callback_data="other_rating_settings"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_operator_resolve_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Operator resolve issue keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚úÖ Muammoni hal qilish" if lang == 'uz' else "‚úÖ –†–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É",
                callback_data="operator_resolve_issue"
            )
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è Orqaga qaytish" if lang == 'uz' else "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥",
                callback_data="operator_back_to_application"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_operator_cancel_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Operator cancel keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="‚ùå Bekor qilish" if lang == 'uz' else "‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="operator_back_to_application"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_operator_back_to_inbox_keyboard(lang: str = 'uz') -> InlineKeyboardMarkup:
    """Operator back to inbox keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üì• Inbox'ga qaytish" if lang == 'uz' else "üì• –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ inbox",
                callback_data="operator_back_to_inbox"
            )
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_operator_navigation_keyboard(current_index: int, total_applications: int, application_id: str, lang: str = 'uz') -> InlineKeyboardMarkup:
    """Operator navigation keyboard"""
    keyboard = []
    
    # Action buttons row
    action_buttons = []
    
    # Contact client button
    action_buttons.append(InlineKeyboardButton(
        text="üìû Mijoz bilan bog'lanish" if lang == 'uz' else "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
        callback_data=f"operator_contact_client_{application_id}"
    ))
    
    # Resolve issue button
    action_buttons.append(InlineKeyboardButton(
        text="‚úÖ Muammoni hal qilish" if lang == 'uz' else "‚úÖ –†–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É",
        callback_data=f"operator_resolve_issue_{application_id}"
    ))
    
    keyboard.append(action_buttons)
    
    # Navigation buttons row
    nav_buttons = []
    
    if current_index > 0:
        nav_buttons.append(InlineKeyboardButton(
            text="‚¨ÖÔ∏è Oldingi" if lang == 'uz' else "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è",
            callback_data="operator_prev_application"
        ))
    
    if current_index < total_applications - 1:
        nav_buttons.append(InlineKeyboardButton(
            text="Keyingi ‚û°Ô∏è" if lang == 'uz' else "–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è",
            callback_data="operator_next_application"
        ))
    
    if nav_buttons:
        keyboard.append(nav_buttons)
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)