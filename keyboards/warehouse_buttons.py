from typing import List

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)


# =========================
# Main menu and language
# =========================

def get_warehouse_main_keyboard(lang: str = "uz") -> ReplyKeyboardMarkup:
    """Warehouse main reply keyboard (localized)."""
    inbox = "üì• Inbox"
    inventory = "üì¶ Inventarizatsiya" if lang == "uz" else "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è"
    orders = "üìã Buyurtmalar" if lang == "uz" else "üìã –ó–∞–∫–∞–∑—ã"
    statistics = "üìä Statistikalar" if lang == "uz" else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    export = "üì§ Export" if lang == "uz" else "üì§ –≠–∫—Å–ø–æ—Ä—Ç"
    change_lang = "üåê Tilni o'zgartirish" if lang == "uz" else "üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"

    keyboard = [
        [KeyboardButton(text=inbox), KeyboardButton(text=inventory)],
        [KeyboardButton(text=orders), KeyboardButton(text=statistics)],
        [KeyboardButton(text=export), KeyboardButton(text=change_lang)],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def language_selection_keyboard() -> InlineKeyboardMarkup:
    """Inline keyboard for language selection used in warehouse module."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üá∫üáø O'zbek tili", callback_data="set_language_uz"),
                InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫", callback_data="set_language_ru"),
            ]
        ]
    )


def get_warehouse_back_to_main_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline back-to-main keyboard for warehouse flows."""
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text=back, callback_data="warehouse_back_to_main")]]
    )


# =========================
# Inventory keyboards
# =========================

def warehouse_inventory_menu(lang: str = "uz") -> ReplyKeyboardMarkup:
    """Reply keyboard for inventory management menu."""
    all_items = "üìã Barcha mahsulotlar" if lang == "uz" else "üìã –í—Å–µ —Ç–æ–≤–∞—Ä—ã"
    add_item = "‚ûï Mahsulot qo'shish" if lang == "uz" else "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"
    update_item = "‚úèÔ∏è Mahsulotni yangilash" if lang == "uz" else "‚úèÔ∏è –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"
    search = "üîç Qidirish" if lang == "uz" else "üîç –ü–æ–∏—Å–∫"
    low_stock = "‚ö†Ô∏è Kam zaxira" if lang == "uz" else "‚ö†Ô∏è –ù–∏–∑–∫–∏–π –æ—Å—Ç–∞—Ç–æ–∫"
    out_of_stock = "‚ùå Tugagan mahsulotlar" if lang == "uz" else "‚ùå –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"

    keyboard = [
        [KeyboardButton(text=all_items), KeyboardButton(text=add_item)],
        [KeyboardButton(text=update_item), KeyboardButton(text=search)],
        [KeyboardButton(text=low_stock), KeyboardButton(text=out_of_stock)],
        [KeyboardButton(text=back)],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def inventory_actions_keyboard(lang: str = "uz") -> ReplyKeyboardMarkup:
    """Optional reply keyboard for quick inventory actions (unused but imported)."""
    increase = "‚ûï Kirim" if lang == "uz" else "‚ûï –ü—Ä–∏—Ö–æ–¥"
    decrease = "‚ûñ Chiqim" if lang == "uz" else "‚ûñ –†–∞—Å—Ö–æ–¥"
    delete = "üóëÔ∏è O'chirish" if lang == "uz" else "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    keyboard = [
        [KeyboardButton(text=increase), KeyboardButton(text=decrease)],
        [KeyboardButton(text=delete)],
        [KeyboardButton(text=back)],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def inventory_actions_inline(item_id: int, lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline actions for inventory item increase/decrease/delete."""
    inc = "‚ûï Kirim" if lang == "uz" else "‚ûï –ü—Ä–∏—Ö–æ–¥"
    dec = "‚ûñ Chiqim" if lang == "uz" else "‚ûñ –†–∞—Å—Ö–æ–¥"
    delete = "üóëÔ∏è O'chirish" if lang == "uz" else "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=inc, callback_data=f"increase_{item_id}"),
                InlineKeyboardButton(text=dec, callback_data=f"decrease_{item_id}"),
            ],
            [InlineKeyboardButton(text=delete, callback_data=f"delete_{item_id}")],
            [InlineKeyboardButton(text=back, callback_data="warehouse_inventory")],
        ]
    )


def update_item_fields_inline(item_id: int, lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline keyboard to pick which item field to update."""
    name_t = "üìù Nomi" if lang == "uz" else "üìù –ù–∞–∑–≤–∞–Ω–∏–µ"
    qty_t = "üî¢ Miqdor" if lang == "uz" else "üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"
    price_t = "üí∞ Narx" if lang == "uz" else "üí∞ –¶–µ–Ω–∞"
    desc_t = "üìù Tavsif" if lang == "uz" else "üìù –û–ø–∏—Å–∞–Ω–∏–µ"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=name_t, callback_data=f"update_name_{item_id}")],
            [InlineKeyboardButton(text=qty_t, callback_data=f"update_quantity_{item_id}")],
            [InlineKeyboardButton(text=price_t, callback_data=f"update_price_{item_id}")],
            [InlineKeyboardButton(text=desc_t, callback_data=f"update_description_{item_id}")],
            [InlineKeyboardButton(text=back, callback_data="warehouse_inventory")],
        ]
    )


# =========================
# Orders keyboards
# =========================

def warehouse_orders_menu(lang: str = "uz") -> ReplyKeyboardMarkup:
    """Reply keyboard for warehouse orders section."""
    pending = "‚è≥ Kutilayotgan buyurtmalar" if lang == "uz" else "‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ"
    in_progress = "üîÑ Jarayondagi buyurtmalar" if lang == "uz" else "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"
    completed = "‚úÖ Bajarilgan buyurtmalar" if lang == "uz" else "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    keyboard = [
        [KeyboardButton(text=pending)],
        [KeyboardButton(text=in_progress)],
        [KeyboardButton(text=completed)],
        [KeyboardButton(text=back)],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def order_status_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline keyboard to filter orders by status."""
    new_t = "üÜï Yangi" if lang == "uz" else "üÜï –ù–æ–≤—ã–µ"
    conf_t = "‚úÖ Tasdiqlangan" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ"
    prog_t = "üîÑ Jarayonda" if lang == "uz" else "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"
    comp_t = "‚úÖ Bajarilgan" if lang == "uz" else "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ"
    canc_t = "‚ùå Bekor qilingan" if lang == "uz" else "‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=new_t, callback_data="filter_orders_new"),
                InlineKeyboardButton(text=conf_t, callback_data="filter_orders_confirmed"),
            ],
            [
                InlineKeyboardButton(text=prog_t, callback_data="filter_orders_in_progress"),
                InlineKeyboardButton(text=comp_t, callback_data="filter_orders_completed"),
            ],
            [InlineKeyboardButton(text=canc_t, callback_data="filter_orders_cancelled")],
            [InlineKeyboardButton(text=back, callback_data="warehouse_back")],
        ]
    )


# =========================
# Inbox keyboards
# =========================

def get_warehouse_inbox_navigation_keyboard(
    current_index: int, total_items: int, lang: str = "uz"
) -> InlineKeyboardMarkup:
    """Inline navigation for inbox requests list (prev/next)."""
    prev_t = "‚¨ÖÔ∏è Oldingi" if lang == "uz" else "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è"
    next_t = "Keyingisi ‚û°Ô∏è" if lang == "uz" else "–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è"
    rows: List[List[InlineKeyboardButton]] = []
    nav_row: List[InlineKeyboardButton] = []
    if current_index > 0:
        nav_row.append(InlineKeyboardButton(text=prev_t, callback_data="wh_prev"))
    if current_index < max(0, total_items - 1):
        nav_row.append(InlineKeyboardButton(text=next_t, callback_data="wh_next"))
    if nav_row:
        rows.append(nav_row)
    return InlineKeyboardMarkup(inline_keyboard=rows)


def get_warehouse_request_actions_keyboard(request_id: str, lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline actions for a technician-to-warehouse request."""
    approve = "‚úÖ Tasdiqlash" if lang == "uz" else "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    reject = "‚ùå Rad etish" if lang == "uz" else "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å"
    prepare = "üì¶ Tayyorlash" if lang == "uz" else "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=approve, callback_data=f"wh_approve_{request_id}"),
                InlineKeyboardButton(text=reject, callback_data=f"wh_reject_{request_id}"),
            ],
            [InlineKeyboardButton(text=prepare, callback_data=f"wh_prepare_{request_id}")],
        ]
    )


def get_warehouse_back_to_inbox_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline keyboard: back to warehouse inbox list."""
    back = "üì• Inbox'ga qaytish" if lang == "uz" else "üì• –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ inbox"
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text=back, callback_data="wh_back_to_inbox")]]
    )


def get_warehouse_cancel_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline cancel keyboard used while entering rejection reason."""
    cancel = "‚ùå Bekor qilish" if lang == "uz" else "‚ùå –û—Ç–º–µ–Ω–∞"
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text=cancel, callback_data="wh_back_to_inbox")]]
    )


def get_warehouse_application_actions_keyboard(app_id: str, lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline actions for a warehouse application (detailed view)."""
    complete = "‚úÖ Yakunlash" if lang == "uz" else "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å"
    return_to_tech = "üîß Texnikka qaytarish" if lang == "uz" else "üîß –í–µ—Ä–Ω—É—Ç—å —Ç–µ—Ö–Ω–∏–∫—É"
    prepare = "üì¶ Tayyorlash" if lang == "uz" else "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=complete, callback_data=f"wh_complete_{app_id}")],
            [InlineKeyboardButton(text=return_to_tech, callback_data=f"wh_return_tech_{app_id}")],
            [InlineKeyboardButton(text=prepare, callback_data=f"wh_prepare_{app_id}")],
        ]
    )


# =========================
# Export keyboards
# =========================

def get_warehouse_export_types_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline keyboard to pick export type for warehouse module."""
    inv = "üì¶ Inventarizatsiya" if lang == "uz" else "üì¶ –ò–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è"
    issued = "üìã Berilgan materiallar" if lang == "uz" else "üìã –í—ã–¥–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
    orders = "üìë Buyurtmalar" if lang == "uz" else "üìë –ó–∞–∫–∞–∑—ã"
    stats = "üìä Statistika" if lang == "uz" else "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    back_main = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=inv, callback_data="warehouse_export_inventory")],
            [InlineKeyboardButton(text=issued, callback_data="warehouse_export_issued_items")],
            [InlineKeyboardButton(text=orders, callback_data="warehouse_export_orders")],
            [InlineKeyboardButton(text=stats, callback_data="warehouse_export_statistics")],
            [InlineKeyboardButton(text=back_main, callback_data="warehouse_export_back_main")],
        ]
    )


def get_warehouse_export_formats_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline keyboard to pick export format."""
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="CSV", callback_data="warehouse_format_csv")],
            [InlineKeyboardButton(text="Excel", callback_data="warehouse_format_xlsx")],
            [InlineKeyboardButton(text="Word", callback_data="warehouse_format_docx")],
            [InlineKeyboardButton(text="PDF", callback_data="warehouse_format_pdf")],
            [InlineKeyboardButton(text=back, callback_data="warehouse_export_back_types")],
        ]
    )


def get_warehouse_export_back_types_keyboard(lang: str = "uz") -> InlineKeyboardMarkup:
    """Same as types keyboard, used when returning from format selection to type selection."""
    return get_warehouse_export_types_keyboard(lang)


# =========================
# Statistics keyboards
# =========================

def warehouse_statistics_menu(lang: str = "uz") -> ReplyKeyboardMarkup:
    """Reply keyboard for statistics main section."""
    inv_stats = "üì¶ Inventarizatsiya statistikasi" if lang == "uz" else "üì¶ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è"
    order_stats = "üìã Buyurtmalar statistikasi" if lang == "uz" else "üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤"
    low_stock = "‚ö†Ô∏è Kam zaxira statistikasi" if lang == "uz" else "‚ö†Ô∏è –ù–∏–∑–∫–∏–µ –æ—Å—Ç–∞—Ç–∫–∏"
    finance = "üí∞ Moliyaviy hisobot" if lang == "uz" else "üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç"
    period = "üìÜ Vaqt oralig'idagi statistika" if lang == "uz" else "üìÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥—É"
    daily = "üìÖ Kunlik statistika" if lang == "uz" else "üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    weekly = "üìä Haftalik statistika" if lang == "uz" else "üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    monthly = "üìà Oylik statistika" if lang == "uz" else "üìà –ï–∂–µ–º–µ—Å—è—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"

    keyboard = [
        [KeyboardButton(text=daily), KeyboardButton(text=weekly)],
        [KeyboardButton(text=monthly), KeyboardButton(text=period)],
        [KeyboardButton(text=inv_stats), KeyboardButton(text=order_stats)],
        [KeyboardButton(text=low_stock), KeyboardButton(text=finance)],
        [KeyboardButton(text=back)],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def statistics_period_menu(lang: str = "uz") -> InlineKeyboardMarkup:
    """Inline keyboard for picking a statistics period."""
    daily = "üìÖ Kunlik" if lang == "uz" else "üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ"
    weekly = "üìä Haftalik" if lang == "uz" else "üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ"
    monthly = "üìà Oylik" if lang == "uz" else "üìà –ï–∂–µ–º–µ—Å—è—á–Ω–æ"
    turnover = "üîÑ Aylanma" if lang == "uz" else "üîÑ –û–±–æ—Ä–æ—Ç"
    perf = "üìà Samaradorlik" if lang == "uz" else "üìà –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
    back = "‚óÄÔ∏è Orqaga" if lang == "uz" else "‚óÄÔ∏è –ù–∞–∑–∞–¥"
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=daily, callback_data="daily_statistics")],
            [InlineKeyboardButton(text=weekly, callback_data="weekly_statistics")],
            [InlineKeyboardButton(text=monthly, callback_data="monthly_statistics")],
            [InlineKeyboardButton(text=turnover, callback_data="turnover_statistics")],
            [InlineKeyboardButton(text=perf, callback_data="performance_report")],
            [InlineKeyboardButton(text=back, callback_data="back")],
        ]
    )


